#
# COPYRIGHT Ericsson 2024
#
#
#
# The copyright to the computer program(s) herein is the property of
#
# Ericsson Inc. The programs may be used and/or copied only with written
#
# permission from Ericsson Inc. or in accordance with the terms and
#
# conditions stipulated in the agreement/contract under which the
#
# program(s) have been supplied.
#

# DR-D1121-011 supported global parameters shall be left as comments (YAML comment) in the values.yaml
#global:
#  registry:
#    url: armdocker.rnd.ericsson.se
#    imagePullPolicy: IfNotPresent
#  hosts:
#    iam:
#  iam:
#    clientId: eo
#    adminSecret: eric-sec-access-mgmt-creds
#    userKey: kcadminid
#    passwordKey: kcpasswd
#    cacert:
#      secretName: iam-cacert-secret
#      key: tls.crt
#      filePath: iam/ca.crt
#  security:
#    privilegedPolicyClusterRoleName: RELEASE-NAME-allowed-use-privileged-policy
#  securityPolicy:
#    rolekind: ""
#  labels: {}
#  annotations: {}

nameOverride: eric-evnfm-rbac

securityPolicy:
  rolename: ""

nodeSelector: {}
labels: {}
annotations: {}

imageCredentials:
  keycloakClient:
    repoPath: # see default value in eric-product-info.yaml file
  logshipper:
    repoPath: proj-adp-log-released

eric-eo-evnfm-drac:
  enabled: false
  domainRoles:

defaultUser:
  username:
  password:

# For ADP HC Design Rule Checker
replicaCount: 1
updateStrategy:
  type: RollingUpdate

logShipper:
  storage:
    size: "50Mi"
    medium: "Ephemeral"
  input:
    files:
      - enabled: true
        paths:
          - "/rbac_create_configuration.log"

resources:
  keycloakClient:
    requests:
      memory: "64Mi"
      cpu: "50m"
      ephemeral-storage: "200Mi"
    limits:
      memory: "256Mi"
      cpu: "100m"
      ephemeral-storage: "300Mi"
  logshipper:
    requests:
      memory: "50Mi"
      cpu: "50m"
      ephemeral-storage: "200Mi"
    limits:
      memory: "100Mi"
      cpu: "100m"
      ephemeral-storage: "300Mi"
    disableProbes: false
  ericsecoauthproxy:
    requests:
      memory: 30Mi
      cpu: 10m
      ephemeral-storage: ""
    limits:
      memory: 150Mi
      cpu: 50m
      ephemeral-storage: ""
  ericsecoauthsap:
    requests:
      memory: 30Mi
      cpu: 10m
      ephemeral-storage: ""
    limits:
      memory: 150Mi
      cpu: 50m
      ephemeral-storage: ""

probes:
  logshipper:
    livenessProbe:
      initialDelaySeconds: 1
      periodSeconds: 10
      timeoutSeconds: 10
      failureThreshold: 3

log:
  outputs:
    - stdout
    - stream
  logshipper:
    level: "info"
  streamingMethod: "indirect"

logshipper:
  runAndExit: true
  logplane: "adp-app-logs"
  logtransformer:
    host: eric-log-transformer

tolerations:
  rbac:
    - key: node.kubernetes.io/not-ready
      operator: Exists
      effect: NoExecute
      tolerationSeconds: 0
    - key: node.kubernetes.io/unreachable
      operator: Exists
      effect: NoExecute
      tolerationSeconds: 0

terminationGracePeriodSeconds:
  rbac: 30
  keycloakClient: 30
  logshipper: 30
  ericsecoauthsap: 30
  ericsecoauthproxy: 30

hooks:
  activeDeadlineSeconds: 1800
  backoffLimit: 1800

ingress:
  enabled: false
  # If true, a Contour HTTPProxy will be used as ingress (required for authorization)
  # If false, a Kubernetes nginx ingress will be used.
  useHttpProxy: true
  # Mandatory, if ingress.enabled=true
  hostname: ""
  ingressClass:
  tls:
    # Optional
    # If true, TLS connection will be terminated at Alarm Handler pod
    # instead of ingress controller.
    passthrough: false
    # Optional
    # If true, ingress will require external client to provide client certificate
    # which will be verified agains the CA provided in ingress.certificates.trustedCertificateListName,
    # or ingress.certificates.caSecret if provided.
    verifyClientCertificate: true
  certificates:
    # External certificate, should be on format <keyName>/<certName>
    asymmetricKeyCertificateName: "fh-alarm-http-server/fh-alarm-http-server"
    # Name of the certificates list instance according to ietf-truststore configuration.
    trustedCertificateListName: "fh-alarm-http-server"
    # Name of secret, holding the cert/key used instead of asymmetricKeyCertificateName
    secretName: ""
    # Name of secret, holding the ca.crt file with all trusted certificates used instead of trustedCertificateListName
    caSecret: ""
  # Optional
  # Additional annotation to add to HTTPProxy/Ingress resource
  annotations: {}
  # The path to match from the external request
  path: /

# ----------------------------------------------------------------------
# The rest of authorization proxy parameters are enclosed inside
# 'authorizationProxy:' struct
# ----------------------------------------------------------------------
authorizationProxy:
  # Optional.
  # Is Authorization Proxy enabled or not
  enabled: true
  #
  # Conditional, if ADP IAM Server is installed with non-default chart name
  # The name of the ADP IAM Server service (chart)
  adpIamServiceName: eric-sec-access-mgmt # Default value
  #
  ## Conditional, if ADP ICCR Ingress is installed with non-default chart name
  ## The name of the ADP ICCR Ingress service (chart)
  adpIccrServiceName: eric-tm-ingress-controller-cr # Default value
  #
  # Conditional, if ADP ICCR is deployed with Envoy client certificates enabled
  # and Envoy client certificate CA(s) is stored in non-default k8s secret.
  # If this parameter is set then authorizationProxy.adpIccrServiceName is obsolete.
  #
  # The name of the k8s secret which contains ADP ICCR Envoy client certificate CAs
  # adpIccrCaSecret: "" # Default value
  #
  # Conditional, if ADP IAM Server cluster internal service port has a
  # non-default value. In IAM server this implies the following parameters:
  # .values.service.tls.port and .values.service.port
  # (IAM server has different port numbers depending on if TLS is enabled/disabled)
  # adpIamServicePort: 443 # Example value.
  adpIamServicePort: ""  # Default value.
  # Alternative ADP IAM kubernetes service port when IAM server Admin console is blocked
  adpIamAdminConsolePort: 8444
  #
  # Conditional, if ADP IAM Server uses different realm name for Admin User Management.
  # The name of the IAM server realm used by authorization proxy:
  adpIamRealm: oam # Default value
  #
  # Optional
  # The container port number for authorization proxy sidecar
  port: 8888 # Default value
  #
  # Optional
  # The suffix part of the service provider specific Authorization Proxy k8s service name.
  # The service name format is <service-provider-chart-name> + "-" + suffixOverride
  suffixOverride: authproxy # Default value
  #
  # Optional
  # The name of k8s secret providing IAM client credentials. Relevant only
  # when TLS is disabled (TLS shouldn't be disabled in production, only in
  # customer demos and similar).
  # Must have the same value as authenticationProxy.clientCredentialSecret
  # in IAM server.
  adpIamClientCredentialSecret: "eric-sec-access-mgmt-aapxy-creds" # Default value
  #
  # Optional
  # The name of k8s secret providing IAM Server Admin credentials.
  # Must have the same value as statefulset.adminSecret
  # in IAM server.
  adpIamAdminSecret: "eric-sec-access-mgmt-aapxy-creds" # Default value
  #
  # Optional
  # Timeout for HTTP request which is forwarded to the Service Provider.
  # Authorization proxy waits for reply spRequestTimeout seconds after
  # which it replies with 503 code to downstream.
  spRequestTimeout: 8
  #
  # Optional
  # Timeout for authorization interrogation which is sent to IAM server.
  # Authorization proxy waits for reply iamRequestTimeout seconds after
  # which it replies with 503 code to downstream.
  iamRequestTimeout: 8
  #
  authzLog:
    # Conditional, if 'applicationLevel' logging is used, for example: global.log.outputs="applicationLevel"
    # Log Transformer host i.e Kubernetes Service name of the Log Transformer
    logtransformer:
      host: "eric-log-transformer"
  #
  # sipoauth2:
  #    # Optional
  #    # Enables or disables authorization proxy to use IAM sip-oauth2 api
  #    # to get identity when communicating with IAM.
  #    # Deprecated
  #    enabled: false
  #
  # Optional
  # If false, metrics will not be scraped
  metrics:
    enabled: false

service:
  endpoints:
    fiapi:
      tls:
        enforced: required
        verifyClientCertificate: required
    restapi:
      tls:
        enforced: required
        verifyClientCertificate: required
    metrics:
      enabled: false
      port: 8000
      tls:
        # - If 'optional': HTTP only
        # - If 'required': HTTPS only
        # For metrics we won't have both HTTP and HTTPS at same time
        enforced: required
        verifyClientCertificate: required
    probes:
      tls:
        # - If 'optional': HTTP only
        # - If 'required': HTTPS only
        # For probes we won't have both HTTP and HTTPS at same time
        enforced: required
        # For probes endpoint is not recommended to verify client
        # certificate due to k8s cluster migrations.
        # verifyClientCertificate: required
    authorizationProxy:
      tls:
        # - If 'optional': HTTP only
        # - If 'required' or <not defined>: HTTPS only
        # The AuthorizationProxy does not allow both HTTP and HTTPS at same time
        # options: 'optional' or 'required'
        enforced: required
        #
        # Enabled/Disable client certificate validation (mTLS) in
        # Authorization proxy server endpoint.
        # Effective only IF global.security.tls.enabled == true AND
        # service.endpoints.authorizationProxy.tls.enforced != optional
        # - If 'optional': Client certificate verification is not done (no mTLS towards ICCR)
        # - If 'required': Client certificate verification is performed (mTLS towards ICCR)
        verifyClientCertificate: required

# DR D1123-127
appArmorProfile:
  # The setting applies to all container when the container name is omitted.
  # { choice='unconfined, runtime/default, localhost, "" ' } [ default="" ]
  type: ""

# DR D1123-128
seccompProfile:
  # The setting applies to all container when the container name is omitted.
  # { choice='unconfined, runtime/default, localhost, "" ' } [ default="" ]
  type: ""